// This file is auto-generated by @hey-api/openapi-ts

export type AccountAliasAvailabilitySchema = {
    availability: 'NOT_AVAILABLE' | 'AVAILABLE';
};

export type AccountFullPublicProfilesSchema = {
    items: Array<{
        id: string;
        handle: string;
        paymail: string;
        displayName?: string;
        avatarUrl?: string;
        localCurrencyCode: string;
        /**
         * @deprecated
         */
        bitcoinUnit?: string;
        createdAt: string;
    }>;
};

export type AccountFullUserProfileSchema = {
    publicProfile?: {
        id: string;
        handle: string;
        paymail: string;
        displayName?: string;
        avatarUrl?: string;
        localCurrencyCode: string;
        /**
         * @deprecated
         */
        bitcoinUnit?: string;
        createdAt: string;
    };
    privateProfile?: {
        email?: string;
        /**
         * @deprecated
         */
        phoneNumber?: '';
    };
};

export type AccountRequestEmailCodeSchema = {
    requestId: string;
};

export type ConnectPermissionsSchema = {
    items: Array<'USER_PRIVATE_PROFILE' | 'USER_PUBLIC_PROFILE' | 'PAY' | 'READ_BALANCE' | 'GENERATE_ADDRESS' | 'READ_TRANSACTIONS' | 'ITEMS_READ' | 'ITEMS_WRITE'>;
    appId: string;
};

export type ItemsItemCreationOrderSchema = {
    id: string;
    user: string;
    app: string;
    referencedCollection?: string;
    type: string;
    status: string;
    payment?: {
        [key: string]: never;
    };
    pendingInscriptions: number;
    error?: string;
};

export type ItemsItemSchema = {
    id: string;
    origin?: string;
    user?: {
        id: string;
        alias: string;
        displayName: string;
        profilePictureUrl: string;
    };
    collection?: {
        id: string;
        isFeatured: boolean;
        origin: string;
        name: string;
        attributes?: Array<{
            [key: string]: unknown;
        }>;
        description: string;
        imageUrl: string;
        totalQuantity: number;
        isHandcashCreated: boolean;
        isVerified: boolean;
        isVisibleInMarket: boolean;
        app?: {
            id: string;
            name?: string;
            iconUrl?: string;
        };
    } | {
        id?: string;
    };
    app?: {
        id: string;
        name?: string;
        iconUrl?: string;
    };
    name: string;
    groupingValue: string;
    description: string;
    imageUrl: string;
    multimediaUrl: string;
    multimediaType: string;
    rarity: string;
    color: string;
    attributes?: Array<{
        name: string;
        value?: string | number;
        displayType: string;
    }>;
    isHandcashCreated: boolean;
    isVerified: boolean;
    isListing: boolean;
    itemListing?: {
        id: string;
        status: string;
        paymentRequestUrl: string;
        paymentRequestId: string;
        price: number;
        currencyCode: string;
        denominatedIn: string;
        fiatEquivalent?: {
            amount: number;
            currencyCode: string;
        };
        listedAt: string;
    };
    count: number;
    royalties?: Array<{
        type: string;
        percentage: number;
        destination: string;
    }>;
    actions?: Array<{
        name: string;
        description: string;
        url: string;
        enabled: boolean;
    }>;
    isCurrentUser: boolean;
    floorPriceInUsd?: number;
    lastSoldPriceInUsd?: number;
    externalId?: string;
    priceAlert?: {
        amountInUSD: number;
        groupingValue: string;
        itemName: string;
        contentUrl: string;
        collectionName: string;
        appName: string;
        active?: boolean;
    };
};

export type ItemsItemsSchema = {
    items?: Array<{
        id: string;
        origin?: string;
        user?: {
            id: string;
            alias: string;
            displayName: string;
            profilePictureUrl: string;
        };
        collection?: {
            id: string;
            isFeatured: boolean;
            origin: string;
            name: string;
            attributes?: Array<{
                [key: string]: unknown;
            }>;
            description: string;
            imageUrl: string;
            totalQuantity: number;
            isHandcashCreated: boolean;
            isVerified: boolean;
            isVisibleInMarket: boolean;
            app?: {
                id: string;
                name?: string;
                iconUrl?: string;
            };
        } | {
            id?: string;
        };
        app?: {
            id: string;
            name?: string;
            iconUrl?: string;
        };
        name: string;
        groupingValue: string;
        description: string;
        imageUrl: string;
        multimediaUrl: string;
        multimediaType: string;
        rarity: string;
        color: string;
        attributes?: Array<{
            name: string;
            value?: string | number;
            displayType: string;
        }>;
        isHandcashCreated: boolean;
        isVerified: boolean;
        isListing: boolean;
        itemListing?: {
            id: string;
            status: string;
            paymentRequestUrl: string;
            paymentRequestId: string;
            price: number;
            currencyCode: string;
            denominatedIn: string;
            fiatEquivalent?: {
                amount: number;
                currencyCode: string;
            };
            listedAt: string;
        };
        count: number;
        royalties?: Array<{
            type: string;
            percentage: number;
            destination: string;
        }>;
        actions?: Array<{
            name: string;
            description: string;
            url: string;
            enabled: boolean;
        }>;
        isCurrentUser: boolean;
        floorPriceInUsd?: number;
        lastSoldPriceInUsd?: number;
        externalId?: string;
        priceAlert?: {
            amountInUSD: number;
            groupingValue: string;
            itemName: string;
            contentUrl: string;
            collectionName: string;
            appName: string;
            active?: boolean;
        };
    }>;
};

export type MiscExchangeRateSchema = {
    exchangeRateVersion: string;
    rate: number;
    fiatSymbol: string;
    estimatedExpireDate: string;
};

export type WalletAddressSchema = {
    base58Address: string;
    publicKey?: string;
};

export type WalletBalancesSchema = {
    items?: Array<{
        currency?: {
            code: string;
            logoUrl: string;
            symbol: string;
        };
        units: number;
        fiatEquivalent?: {
            currencyCode: string;
            units: number;
        };
    }>;
};

export type WalletDepositInfoSchema = {
    id: string;
    alias: string;
    paymail: string;
    base58Address: string;
};

export type WalletSpendableBalancesSchema = {
    items?: Array<{
        spendableBalance: number;
        currencyCode: string;
    }>;
};

export type WalletTransactionHistorySchema = {
    from: number;
    to: number;
    items?: Array<{
        transactionId: string;
        type: string;
        time: number;
        note: string;
        currency?: {
            code: string;
            logoUrl: string;
            symbol: string;
        };
        units: number;
        satoshiFees: number;
        fiatEquivalent?: {
            currencyCode: string;
            units: number;
        };
        participants?: Array<{
            id: string;
            type: string;
            alias?: string;
            displayName: string;
            profilePictureUrl: string;
            responseNote: string;
            tags?: Array<string>;
        }>;
        attachments?: Array<{
            format: string;
            value: unknown;
        }>;
        app?: {
            name: string;
            iconUrl: string;
        };
        item?: {
            imageUrl: string;
            name: string;
            collectionName: string;
            origin: string;
            groupingValue: string;
        };
    }>;
};

export type WalletTransactionRecordSchema = {
    transactionId: string;
    type: string;
    time: number;
    note: string;
    currency?: {
        code: string;
        logoUrl: string;
        symbol: string;
    };
    units: number;
    satoshiFees: number;
    fiatEquivalent?: {
        currencyCode: string;
        units: number;
    };
    participants?: Array<{
        id: string;
        type: string;
        alias?: string;
        displayName: string;
        profilePictureUrl: string;
        responseNote: string;
        tags?: Array<string>;
    }>;
    attachments?: Array<{
        format: string;
        value: unknown;
    }>;
    app?: {
        name: string;
        iconUrl: string;
    };
    item?: {
        imageUrl: string;
        name: string;
        collectionName: string;
        origin: string;
        groupingValue: string;
    };
};

export type WalletTransactionTemplateSchema = {
    unsignedTransactionHex: string;
    unsignedTransactionTemplateId: string;
    requiredSignatures: Array<{
        inputIndex: number;
        derivationPath: string;
        signatureHash: string;
    }>;
};

export type PostV1WaasAccountRequestEmailCodeData = {
    body: {
        email: string;
        customEmailParameters?: {
            [key: string]: never;
        };
    };
    path?: never;
    query?: never;
    url: '/v1/waas/account/requestEmailCode';
};

export type PostV1WaasAccountRequestEmailCodeResponses = {
    /**
     * OK
     */
    200: AccountRequestEmailCodeSchema;
};

export type PostV1WaasAccountRequestEmailCodeResponse = PostV1WaasAccountRequestEmailCodeResponses[keyof PostV1WaasAccountRequestEmailCodeResponses];

export type PostV1WaasAccountData = {
    body: {
        accessPublicKey: string;
        email: string;
        alias: string;
    };
    path?: never;
    query?: never;
    url: '/v1/waas/account';
};

export type PostV1WaasAccountResponses = {
    /**
     * OK
     */
    200: WalletDepositInfoSchema;
};

export type PostV1WaasAccountResponse = PostV1WaasAccountResponses[keyof PostV1WaasAccountResponses];

export type PostV1WaasAccountSelfCustodialData = {
    body: {
        walletExtendedPublicKey: string;
        alias?: string;
    };
    path?: never;
    query?: never;
    url: '/v1/waas/account/selfCustodial';
};

export type PostV1WaasAccountSelfCustodialResponses = {
    /**
     * OK
     */
    200: WalletDepositInfoSchema;
};

export type PostV1WaasAccountSelfCustodialResponse = PostV1WaasAccountSelfCustodialResponses[keyof PostV1WaasAccountSelfCustodialResponses];

export type PostV1WaasAccountAccessKeyData = {
    body: {
        accessPublicKey: string;
        email: string;
    };
    path?: never;
    query?: never;
    url: '/v1/waas/account/accessKey';
};

export type PostV1WaasAccountAccessKeyResponses = {
    /**
     * OK
     */
    200: WalletDepositInfoSchema;
};

export type PostV1WaasAccountAccessKeyResponse = PostV1WaasAccountAccessKeyResponses[keyof PostV1WaasAccountAccessKeyResponses];

export type GetV1WaasAccountAliasAvailabilityByAliasData = {
    body?: never;
    path: {
        alias: string;
    };
    query?: never;
    url: '/v1/waas/account/aliasAvailability/{alias}';
};

export type GetV1WaasAccountAliasAvailabilityByAliasResponses = {
    /**
     * OK
     */
    200: AccountAliasAvailabilitySchema;
};

export type GetV1WaasAccountAliasAvailabilityByAliasResponse = GetV1WaasAccountAliasAvailabilityByAliasResponses[keyof GetV1WaasAccountAliasAvailabilityByAliasResponses];

export type PostV1WaasWalletPayData = {
    body: {
        exchangeRateVersion?: string;
        instrumentCurrencyCode: 'MNEE' | 'BSV';
        denominationCurrencyCode?: 'AED' | 'AFN' | 'ALL' | 'AMD' | 'ANG' | 'AOA' | 'ARS' | 'AUD' | 'AWG' | 'AZN' | 'BAM' | 'BBD' | 'BDT' | 'BGN' | 'BHD' | 'BIF' | 'BMD' | 'BND' | 'BOB' | 'BRL' | 'BSD' | 'BTC' | 'BTN' | 'BWP' | 'BYN' | 'BYR' | 'BZD' | 'CAD' | 'CDF' | 'CHF' | 'CLF' | 'CLP' | 'CNY' | 'CNH' | 'COP' | 'CRC' | 'CUC' | 'CUP' | 'CVE' | 'CZK' | 'DJF' | 'DKK' | 'DOP' | 'DZD' | 'EGP' | 'ERN' | 'ETB' | 'EUR' | 'FJD' | 'FKP' | 'GBP' | 'GEL' | 'GGP' | 'GHS' | 'GIP' | 'GMD' | 'GNF' | 'GTQ' | 'GYD' | 'HKD' | 'HNL' | 'HRK' | 'HTG' | 'HUF' | 'IDR' | 'ILS' | 'IMP' | 'INR' | 'IQD' | 'IRR' | 'ISK' | 'JEP' | 'JMD' | 'JOD' | 'JPY' | 'KES' | 'KGS' | 'KHR' | 'KMF' | 'KPW' | 'KRW' | 'KWD' | 'KYD' | 'KZT' | 'LAK' | 'LBP' | 'LKR' | 'LRD' | 'LSL' | 'LTL' | 'LVL' | 'LYD' | 'MAD' | 'MDL' | 'MGA' | 'MKD' | 'MMK' | 'MNT' | 'MOP' | 'MRU' | 'MUR' | 'MVR' | 'MWK' | 'MXN' | 'MYR' | 'MZN' | 'NAD' | 'NGN' | 'NIO' | 'NOK' | 'NPR' | 'NZD' | 'OMR' | 'PAB' | 'PEN' | 'PGK' | 'PHP' | 'PKR' | 'PLN' | 'PYG' | 'QAR' | 'RON' | 'RSD' | 'RUB' | 'RWF' | 'SAR' | 'SBD' | 'SCR' | 'SDG' | 'SEK' | 'SGD' | 'SHP' | 'SLE' | 'SLL' | 'SOS' | 'SRD' | 'STD' | 'SVC' | 'SYP' | 'SZL' | 'THB' | 'TJS' | 'TMT' | 'TND' | 'TOP' | 'TRY' | 'TTD' | 'TWD' | 'TZS' | 'UAH' | 'UGX' | 'USD' | 'UYU' | 'UZS' | 'VES' | 'VND' | 'VUV' | 'WST' | 'XAF' | 'XAG' | 'XAU' | 'XCD' | 'XDR' | 'XOF' | 'XPF' | 'YER' | 'ZAR' | 'ZMK' | 'ZMW' | 'ZWL';
        note?: string;
        attachment?: {
            format: 'hex' | 'base64' | 'json' | 'hexArray';
            value?: {
                [key: string]: never;
            } | Array<string> | string;
        };
        receivers?: Array<{
            sendAmount: number;
            destination: string;
            tags?: Array<string>;
        }> | Array<{
            sendAmount: number;
            destination: string;
            tags?: Array<string>;
        }>;
    };
    path?: never;
    query?: never;
    url: '/v1/waas/wallet/pay';
};

export type PostV1WaasWalletPayResponses = {
    /**
     * OK
     */
    200: WalletTransactionRecordSchema;
};

export type PostV1WaasWalletPayResponse = PostV1WaasWalletPayResponses[keyof PostV1WaasWalletPayResponses];

export type PostV1WaasWalletSelfCustodyPayTemplateData = {
    body: {
        exchangeRateVersion?: string;
        note?: string;
        appAction?: string;
        attachment?: {
            format: 'hex' | 'base64' | 'json' | 'hexArray';
            value?: {
                [key: string]: never;
            } | Array<string> | string;
        };
        receivers?: Array<{
            sendAmount: number;
            /**
             * currencyCode
             */
            denominationCurrencyCode: 'AED' | 'AFN' | 'ALL' | 'AMD' | 'ANG' | 'AOA' | 'ARS' | 'AUD' | 'AWG' | 'AZN' | 'BAM' | 'BBD' | 'BDT' | 'BGN' | 'BHD' | 'BIF' | 'BMD' | 'BND' | 'BOB' | 'BRL' | 'BSD' | 'BTC' | 'BTN' | 'BWP' | 'BYN' | 'BYR' | 'BZD' | 'CAD' | 'CDF' | 'CHF' | 'CLF' | 'CLP' | 'CNY' | 'CNH' | 'COP' | 'CRC' | 'CUC' | 'CUP' | 'CVE' | 'CZK' | 'DJF' | 'DKK' | 'DOP' | 'DZD' | 'EGP' | 'ERN' | 'ETB' | 'EUR' | 'FJD' | 'FKP' | 'GBP' | 'GEL' | 'GGP' | 'GHS' | 'GIP' | 'GMD' | 'GNF' | 'GTQ' | 'GYD' | 'HKD' | 'HNL' | 'HRK' | 'HTG' | 'HUF' | 'IDR' | 'ILS' | 'IMP' | 'INR' | 'IQD' | 'IRR' | 'ISK' | 'JEP' | 'JMD' | 'JOD' | 'JPY' | 'KES' | 'KGS' | 'KHR' | 'KMF' | 'KPW' | 'KRW' | 'KWD' | 'KYD' | 'KZT' | 'LAK' | 'LBP' | 'LKR' | 'LRD' | 'LSL' | 'LTL' | 'LVL' | 'LYD' | 'MAD' | 'MDL' | 'MGA' | 'MKD' | 'MMK' | 'MNT' | 'MOP' | 'MRU' | 'MUR' | 'MVR' | 'MWK' | 'MXN' | 'MYR' | 'MZN' | 'NAD' | 'NGN' | 'NIO' | 'NOK' | 'NPR' | 'NZD' | 'OMR' | 'PAB' | 'PEN' | 'PGK' | 'PHP' | 'PKR' | 'PLN' | 'PYG' | 'QAR' | 'RON' | 'RSD' | 'RUB' | 'RWF' | 'SAR' | 'SBD' | 'SCR' | 'SDG' | 'SEK' | 'SGD' | 'SHP' | 'SLE' | 'SLL' | 'SOS' | 'SRD' | 'STD' | 'SVC' | 'SYP' | 'SZL' | 'THB' | 'TJS' | 'TMT' | 'TND' | 'TOP' | 'TRY' | 'TTD' | 'TWD' | 'TZS' | 'UAH' | 'UGX' | 'USD' | 'UYU' | 'UZS' | 'VES' | 'VND' | 'VUV' | 'WST' | 'XAF' | 'XAG' | 'XAU' | 'XCD' | 'XDR' | 'XOF' | 'XPF' | 'YER' | 'ZAR' | 'ZMK' | 'ZMW' | 'ZWL' | 'SAT' | 'BSV';
            destination: string;
            tags?: Array<string>;
        }> | Array<{
            sendAmount: number;
            /**
             * currencyCode
             */
            denominationCurrencyCode: 'AED' | 'AFN' | 'ALL' | 'AMD' | 'ANG' | 'AOA' | 'ARS' | 'AUD' | 'AWG' | 'AZN' | 'BAM' | 'BBD' | 'BDT' | 'BGN' | 'BHD' | 'BIF' | 'BMD' | 'BND' | 'BOB' | 'BRL' | 'BSD' | 'BTC' | 'BTN' | 'BWP' | 'BYN' | 'BYR' | 'BZD' | 'CAD' | 'CDF' | 'CHF' | 'CLF' | 'CLP' | 'CNY' | 'CNH' | 'COP' | 'CRC' | 'CUC' | 'CUP' | 'CVE' | 'CZK' | 'DJF' | 'DKK' | 'DOP' | 'DZD' | 'EGP' | 'ERN' | 'ETB' | 'EUR' | 'FJD' | 'FKP' | 'GBP' | 'GEL' | 'GGP' | 'GHS' | 'GIP' | 'GMD' | 'GNF' | 'GTQ' | 'GYD' | 'HKD' | 'HNL' | 'HRK' | 'HTG' | 'HUF' | 'IDR' | 'ILS' | 'IMP' | 'INR' | 'IQD' | 'IRR' | 'ISK' | 'JEP' | 'JMD' | 'JOD' | 'JPY' | 'KES' | 'KGS' | 'KHR' | 'KMF' | 'KPW' | 'KRW' | 'KWD' | 'KYD' | 'KZT' | 'LAK' | 'LBP' | 'LKR' | 'LRD' | 'LSL' | 'LTL' | 'LVL' | 'LYD' | 'MAD' | 'MDL' | 'MGA' | 'MKD' | 'MMK' | 'MNT' | 'MOP' | 'MRU' | 'MUR' | 'MVR' | 'MWK' | 'MXN' | 'MYR' | 'MZN' | 'NAD' | 'NGN' | 'NIO' | 'NOK' | 'NPR' | 'NZD' | 'OMR' | 'PAB' | 'PEN' | 'PGK' | 'PHP' | 'PKR' | 'PLN' | 'PYG' | 'QAR' | 'RON' | 'RSD' | 'RUB' | 'RWF' | 'SAR' | 'SBD' | 'SCR' | 'SDG' | 'SEK' | 'SGD' | 'SHP' | 'SLE' | 'SLL' | 'SOS' | 'SRD' | 'STD' | 'SVC' | 'SYP' | 'SZL' | 'THB' | 'TJS' | 'TMT' | 'TND' | 'TOP' | 'TRY' | 'TTD' | 'TWD' | 'TZS' | 'UAH' | 'UGX' | 'USD' | 'UYU' | 'UZS' | 'VES' | 'VND' | 'VUV' | 'WST' | 'XAF' | 'XAG' | 'XAU' | 'XCD' | 'XDR' | 'XOF' | 'XPF' | 'YER' | 'ZAR' | 'ZMK' | 'ZMW' | 'ZWL' | 'SAT' | 'BSV';
            destination: string;
            tags?: Array<string>;
        }>;
    };
    path?: never;
    query?: never;
    url: '/v1/waas/wallet/selfCustody/pay/template';
};

export type PostV1WaasWalletSelfCustodyPayTemplateResponses = {
    /**
     * OK
     */
    200: WalletTransactionTemplateSchema;
};

export type PostV1WaasWalletSelfCustodyPayTemplateResponse = PostV1WaasWalletSelfCustodyPayTemplateResponses[keyof PostV1WaasWalletSelfCustodyPayTemplateResponses];

export type PostV1WaasWalletSelfCustodyPayBroadcastData = {
    body: {
        unsignedTransactionTemplateId: string;
        signatures: Array<{
            inputIndex: number;
            publicKey: string;
            signature: string;
        }>;
    };
    path?: never;
    query?: never;
    url: '/v1/waas/wallet/selfCustody/pay/broadcast';
};

export type PostV1WaasWalletSelfCustodyPayBroadcastResponses = {
    /**
     * OK
     */
    200: WalletTransactionRecordSchema;
};

export type PostV1WaasWalletSelfCustodyPayBroadcastResponse = PostV1WaasWalletSelfCustodyPayBroadcastResponses[keyof PostV1WaasWalletSelfCustodyPayBroadcastResponses];

export type GetV1WaasWalletDepositInfoData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/waas/wallet/depositInfo';
};

export type GetV1WaasWalletDepositInfoResponses = {
    /**
     * OK
     */
    200: WalletDepositInfoSchema;
};

export type GetV1WaasWalletDepositInfoResponse = GetV1WaasWalletDepositInfoResponses[keyof GetV1WaasWalletDepositInfoResponses];

export type GetV1WaasWalletTransactionData = {
    body?: never;
    path?: never;
    query: {
        transactionId: string;
    };
    url: '/v1/waas/wallet/transaction';
};

export type GetV1WaasWalletTransactionResponses = {
    /**
     * OK
     */
    200: WalletTransactionRecordSchema;
};

export type GetV1WaasWalletTransactionResponse = GetV1WaasWalletTransactionResponses[keyof GetV1WaasWalletTransactionResponses];

export type GetV1WaasWalletTransactionsData = {
    body?: never;
    path?: never;
    query?: {
        from?: number;
        to?: number;
        appId?: string;
        excludeApps?: boolean;
        currencyCode?: 'MNEE' | 'BSV';
        fromDate?: string;
        toDate?: string;
        tag?: string;
        participant?: string;
        type?: 'send' | 'receive' | 'consolidation' | 'other';
        minValue?: number;
        maxValue?: number;
    };
    url: '/v1/waas/wallet/transactions';
};

export type GetV1WaasWalletTransactionsResponses = {
    /**
     * OK
     */
    200: WalletTransactionHistorySchema;
};

export type GetV1WaasWalletTransactionsResponse = GetV1WaasWalletTransactionsResponses[keyof GetV1WaasWalletTransactionsResponses];

export type GetV1WaasWalletBalancesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/waas/wallet/balances';
};

export type GetV1WaasWalletBalancesResponses = {
    /**
     * OK
     */
    200: WalletBalancesSchema;
};

export type GetV1WaasWalletBalancesResponse = GetV1WaasWalletBalancesResponses[keyof GetV1WaasWalletBalancesResponses];

export type GetV1WaasWalletSelfCustodyDepositInfoData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/waas/wallet/selfCustody/depositInfo';
};

export type GetV1WaasWalletSelfCustodyDepositInfoResponses = {
    /**
     * OK
     */
    200: WalletDepositInfoSchema;
};

export type GetV1WaasWalletSelfCustodyDepositInfoResponse = GetV1WaasWalletSelfCustodyDepositInfoResponses[keyof GetV1WaasWalletSelfCustodyDepositInfoResponses];

export type GetV1WaasWalletSelfCustodyTransactionData = {
    body?: never;
    path?: never;
    query: {
        transactionId: string;
    };
    url: '/v1/waas/wallet/selfCustody/transaction';
};

export type GetV1WaasWalletSelfCustodyTransactionResponses = {
    /**
     * OK
     */
    200: WalletTransactionRecordSchema;
};

export type GetV1WaasWalletSelfCustodyTransactionResponse = GetV1WaasWalletSelfCustodyTransactionResponses[keyof GetV1WaasWalletSelfCustodyTransactionResponses];

export type GetV1WaasWalletSelfCustodyTransactionsData = {
    body?: never;
    path?: never;
    query?: {
        from?: number;
        to?: number;
        appId?: string;
        excludeApps?: boolean;
        currencyCode?: 'MNEE' | 'BSV';
        fromDate?: string;
        toDate?: string;
        tag?: string;
        participant?: string;
        type?: 'send' | 'receive' | 'consolidation' | 'other';
        minValue?: number;
        maxValue?: number;
    };
    url: '/v1/waas/wallet/selfCustody/transactions';
};

export type GetV1WaasWalletSelfCustodyTransactionsResponses = {
    /**
     * OK
     */
    200: WalletTransactionHistorySchema;
};

export type GetV1WaasWalletSelfCustodyTransactionsResponse = GetV1WaasWalletSelfCustodyTransactionsResponses[keyof GetV1WaasWalletSelfCustodyTransactionsResponses];

export type GetV1WaasWalletSelfCustodyBalancesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/waas/wallet/selfCustody/balances';
};

export type GetV1WaasWalletSelfCustodyBalancesResponses = {
    /**
     * OK
     */
    200: WalletBalancesSchema;
};

export type GetV1WaasWalletSelfCustodyBalancesResponse = GetV1WaasWalletSelfCustodyBalancesResponses[keyof GetV1WaasWalletSelfCustodyBalancesResponses];

export type GetV1WaasExchangeRateByCurrencyCodeData = {
    body?: never;
    path: {
        currencyCode: 'AED' | 'AFN' | 'ALL' | 'AMD' | 'ANG' | 'AOA' | 'ARS' | 'AUD' | 'AWG' | 'AZN' | 'BAM' | 'BBD' | 'BDT' | 'BGN' | 'BHD' | 'BIF' | 'BMD' | 'BND' | 'BOB' | 'BRL' | 'BSD' | 'BTC' | 'BTN' | 'BWP' | 'BYN' | 'BYR' | 'BZD' | 'CAD' | 'CDF' | 'CHF' | 'CLF' | 'CLP' | 'CNY' | 'CNH' | 'COP' | 'CRC' | 'CUC' | 'CUP' | 'CVE' | 'CZK' | 'DJF' | 'DKK' | 'DOP' | 'DZD' | 'EGP' | 'ERN' | 'ETB' | 'EUR' | 'FJD' | 'FKP' | 'GBP' | 'GEL' | 'GGP' | 'GHS' | 'GIP' | 'GMD' | 'GNF' | 'GTQ' | 'GYD' | 'HKD' | 'HNL' | 'HRK' | 'HTG' | 'HUF' | 'IDR' | 'ILS' | 'IMP' | 'INR' | 'IQD' | 'IRR' | 'ISK' | 'JEP' | 'JMD' | 'JOD' | 'JPY' | 'KES' | 'KGS' | 'KHR' | 'KMF' | 'KPW' | 'KRW' | 'KWD' | 'KYD' | 'KZT' | 'LAK' | 'LBP' | 'LKR' | 'LRD' | 'LSL' | 'LTL' | 'LVL' | 'LYD' | 'MAD' | 'MDL' | 'MGA' | 'MKD' | 'MMK' | 'MNT' | 'MOP' | 'MRU' | 'MUR' | 'MVR' | 'MWK' | 'MXN' | 'MYR' | 'MZN' | 'NAD' | 'NGN' | 'NIO' | 'NOK' | 'NPR' | 'NZD' | 'OMR' | 'PAB' | 'PEN' | 'PGK' | 'PHP' | 'PKR' | 'PLN' | 'PYG' | 'QAR' | 'RON' | 'RSD' | 'RUB' | 'RWF' | 'SAR' | 'SBD' | 'SCR' | 'SDG' | 'SEK' | 'SGD' | 'SHP' | 'SLE' | 'SLL' | 'SOS' | 'SRD' | 'STD' | 'SVC' | 'SYP' | 'SZL' | 'THB' | 'TJS' | 'TMT' | 'TND' | 'TOP' | 'TRY' | 'TTD' | 'TWD' | 'TZS' | 'UAH' | 'UGX' | 'USD' | 'UYU' | 'UZS' | 'VES' | 'VND' | 'VUV' | 'WST' | 'XAF' | 'XAG' | 'XAU' | 'XCD' | 'XDR' | 'XOF' | 'XPF' | 'YER' | 'ZAR' | 'ZMK' | 'ZMW' | 'ZWL';
    };
    query?: never;
    url: '/v1/waas/exchangeRate/{currencyCode}';
};

export type GetV1WaasExchangeRateByCurrencyCodeResponses = {
    /**
     * OK
     */
    200: MiscExchangeRateSchema;
};

export type GetV1WaasExchangeRateByCurrencyCodeResponse = GetV1WaasExchangeRateByCurrencyCodeResponses[keyof GetV1WaasExchangeRateByCurrencyCodeResponses];

export type GetV1WaasItemOrdersByItemCreationOrderIdItemsData = {
    body?: never;
    path: {
        itemCreationOrderId: string;
    };
    query?: never;
    url: '/v1/waas/item-orders/{itemCreationOrderId}/items';
};

export type GetV1WaasItemOrdersByItemCreationOrderIdItemsResponses = {
    /**
     * OK
     */
    200: ItemsItemsSchema;
};

export type GetV1WaasItemOrdersByItemCreationOrderIdItemsResponse = GetV1WaasItemOrdersByItemCreationOrderIdItemsResponses[keyof GetV1WaasItemOrdersByItemCreationOrderIdItemsResponses];

export type GetV1WaasItemOrdersByItemCreationOrderIdData = {
    body?: never;
    path: {
        itemCreationOrderId: string;
    };
    query?: never;
    url: '/v1/waas/item-orders/{itemCreationOrderId}';
};

export type GetV1WaasItemOrdersByItemCreationOrderIdResponses = {
    /**
     * OK
     */
    200: ItemsItemCreationOrderSchema;
};

export type GetV1WaasItemOrdersByItemCreationOrderIdResponse = GetV1WaasItemOrdersByItemCreationOrderIdResponses[keyof GetV1WaasItemOrdersByItemCreationOrderIdResponses];

export type PostV1WaasItemOrdersIssueData = {
    body: {
        uid?: string;
        itemCreationOrderType: 'collection' | 'collectionItem';
        items?: Array<{
            description?: string;
            name: string;
            groupingValue?: string;
            color?: string;
            mediaDetails: {
                image: {
                    url: string;
                    imageHighResUrl?: string;
                    contentType: 'image/png' | 'image/jpg' | 'image/jpeg' | 'image/webp';
                };
                multimedia?: {
                    url: string;
                    contentType: string;
                };
            };
            user?: string;
            quantity?: number;
            rarity?: string;
            attributes?: Array<{
                name: string;
                displayType: string;
                value?: number | string;
            }>;
            actions?: Array<{
                name: string;
                description: string;
                url: string;
                enabled?: boolean;
            }>;
            royalties?: Array<{
                type: 'paymail' | 'address' | 'script';
                percentage: number;
                destination: string;
            }>;
            externalId?: string;
        }> | [
            {
                description?: string;
                name: string;
                groupingValue?: string;
                color?: string;
                mediaDetails: {
                    image: {
                        url: string;
                        imageHighResUrl?: string;
                        contentType: 'image/png' | 'image/jpg' | 'image/jpeg' | 'image/webp';
                    };
                    multimedia?: {
                        url: string;
                        contentType: string;
                    };
                };
                user?: string;
                totalQuantity?: number;
            }
        ];
        referencedCollection?: string;
    };
    path?: never;
    query?: never;
    url: '/v1/waas/item-orders/issue';
};

export type PostV1WaasItemOrdersIssueResponses = {
    /**
     * OK
     */
    200: ItemsItemCreationOrderSchema;
};

export type PostV1WaasItemOrdersIssueResponse = PostV1WaasItemOrdersIssueResponses[keyof PostV1WaasItemOrdersIssueResponses];

export type PostV1WaasItemOrdersBurnAndCreateData = {
    body: {
        burn: {
            origins: Array<string>;
        };
        issue?: {
            items?: Array<{
                description?: string;
                name: string;
                groupingValue?: string;
                color?: string;
                mediaDetails: {
                    image: {
                        url: string;
                        imageHighResUrl?: string;
                        contentType: 'image/png' | 'image/jpg' | 'image/jpeg' | 'image/webp';
                    };
                    multimedia?: {
                        url: string;
                        contentType: string;
                    };
                };
                user?: string;
                quantity?: number;
                rarity?: string;
                attributes?: Array<{
                    name: string;
                    displayType: string;
                    value?: number | string;
                }>;
                actions?: Array<{
                    name: string;
                    description: string;
                    url: string;
                    enabled?: boolean;
                }>;
                royalties?: Array<{
                    type: 'paymail' | 'address' | 'script';
                    percentage: number;
                    destination: string;
                }>;
                externalId?: string;
            }>;
            referencedCollection: string;
            uid?: string;
            itemCreationOrderType?: 'collectionItem';
        };
    };
    path?: never;
    query?: never;
    url: '/v1/waas/item-orders/burn-and-create';
};

export type PostV1WaasItemOrdersBurnAndCreateResponses = {
    /**
     * TODO
     */
    200: {
        '[[TODO]]'?: string;
    };
};

export type PostV1WaasItemOrdersBurnAndCreateResponse = PostV1WaasItemOrdersBurnAndCreateResponses[keyof PostV1WaasItemOrdersBurnAndCreateResponses];

export type PostV1WaasItemsTransferData = {
    body: {
        destinationsWithOrigins: Array<{
            destination: string;
            origins: Array<string>;
        }>;
    };
    path?: never;
    query?: never;
    url: '/v1/waas/items/transfer';
};

export type PostV1WaasItemsTransferResponses = {
    /**
     * TODO
     */
    200: {
        '[[TODO]]'?: string;
    };
};

export type PostV1WaasItemsTransferResponse = PostV1WaasItemsTransferResponses[keyof PostV1WaasItemsTransferResponses];

export type GetV1WaasItemsByOriginData = {
    body?: never;
    path: {
        origin: string;
    };
    query?: never;
    url: '/v1/waas/items/{origin}';
};

export type GetV1WaasItemsByOriginResponses = {
    /**
     * OK
     */
    200: ItemsItemSchema;
};

export type GetV1WaasItemsByOriginResponse = GetV1WaasItemsByOriginResponses[keyof GetV1WaasItemsByOriginResponses];

export type PostV1WaasItemsData = {
    body: {
        from?: number;
        to?: number;
        collectionId?: string;
        /**
         * @deprecated
         */
        collectionIds?: Array<string>;
        searchString?: string;
        groupingValue?: string;
        fetchAttributes?: boolean;
        sort?: 'name';
        order?: 'asc' | 'desc';
        attributes?: Array<{
            name: string;
            displayType: 'string' | 'number';
            operation?: 'equal' | 'includes' | 'matches' | 'greater' | 'lower' | 'greaterOrEqual' | 'lowerOrEqual';
            value?: string | number;
            values?: Array<string | number>;
        }>;
        appId?: string;
        group?: boolean;
        externalId?: string;
    };
    path?: never;
    query?: never;
    url: '/v1/waas/items';
};

export type PostV1WaasItemsResponses = {
    /**
     * OK
     */
    200: ItemsItemsSchema;
};

export type PostV1WaasItemsResponse = PostV1WaasItemsResponses[keyof PostV1WaasItemsResponses];

export type GetCurrentUserProfileData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/connect/profile/currentUserProfile';
};

export type GetCurrentUserProfileResponses = {
    /**
     * OK
     */
    200: AccountFullUserProfileSchema;
};

export type GetCurrentUserProfileResponse = GetCurrentUserProfileResponses[keyof GetCurrentUserProfileResponses];

export type GetPublicUserProfilesData = {
    body?: never;
    path?: never;
    query: {
        aliases: Array<string>;
    };
    url: '/v3/connect/profile/publicUserProfiles';
};

export type GetPublicUserProfilesResponses = {
    /**
     * OK
     */
    200: AccountFullPublicProfilesSchema;
};

export type GetPublicUserProfilesResponse = GetPublicUserProfilesResponses[keyof GetPublicUserProfilesResponses];

export type GetPermissionsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/connect/profile/permissions';
};

export type GetPermissionsResponses = {
    /**
     * OK
     */
    200: ConnectPermissionsSchema;
};

export type GetPermissionsResponse = GetPermissionsResponses[keyof GetPermissionsResponses];

export type GetExchangeRateData = {
    body?: never;
    path: {
        currencyCode: 'AED' | 'AFN' | 'ALL' | 'AMD' | 'ANG' | 'AOA' | 'ARS' | 'AUD' | 'AWG' | 'AZN' | 'BAM' | 'BBD' | 'BDT' | 'BGN' | 'BHD' | 'BIF' | 'BMD' | 'BND' | 'BOB' | 'BRL' | 'BSD' | 'BTC' | 'BTN' | 'BWP' | 'BYN' | 'BYR' | 'BZD' | 'CAD' | 'CDF' | 'CHF' | 'CLF' | 'CLP' | 'CNY' | 'CNH' | 'COP' | 'CRC' | 'CUC' | 'CUP' | 'CVE' | 'CZK' | 'DJF' | 'DKK' | 'DOP' | 'DZD' | 'EGP' | 'ERN' | 'ETB' | 'EUR' | 'FJD' | 'FKP' | 'GBP' | 'GEL' | 'GGP' | 'GHS' | 'GIP' | 'GMD' | 'GNF' | 'GTQ' | 'GYD' | 'HKD' | 'HNL' | 'HRK' | 'HTG' | 'HUF' | 'IDR' | 'ILS' | 'IMP' | 'INR' | 'IQD' | 'IRR' | 'ISK' | 'JEP' | 'JMD' | 'JOD' | 'JPY' | 'KES' | 'KGS' | 'KHR' | 'KMF' | 'KPW' | 'KRW' | 'KWD' | 'KYD' | 'KZT' | 'LAK' | 'LBP' | 'LKR' | 'LRD' | 'LSL' | 'LTL' | 'LVL' | 'LYD' | 'MAD' | 'MDL' | 'MGA' | 'MKD' | 'MMK' | 'MNT' | 'MOP' | 'MRU' | 'MUR' | 'MVR' | 'MWK' | 'MXN' | 'MYR' | 'MZN' | 'NAD' | 'NGN' | 'NIO' | 'NOK' | 'NPR' | 'NZD' | 'OMR' | 'PAB' | 'PEN' | 'PGK' | 'PHP' | 'PKR' | 'PLN' | 'PYG' | 'QAR' | 'RON' | 'RSD' | 'RUB' | 'RWF' | 'SAR' | 'SBD' | 'SCR' | 'SDG' | 'SEK' | 'SGD' | 'SHP' | 'SLE' | 'SLL' | 'SOS' | 'SRD' | 'STD' | 'SVC' | 'SYP' | 'SZL' | 'THB' | 'TJS' | 'TMT' | 'TND' | 'TOP' | 'TRY' | 'TTD' | 'TWD' | 'TZS' | 'UAH' | 'UGX' | 'USD' | 'UYU' | 'UZS' | 'VES' | 'VND' | 'VUV' | 'WST' | 'XAF' | 'XAG' | 'XAU' | 'XCD' | 'XDR' | 'XOF' | 'XPF' | 'YER' | 'ZAR' | 'ZMK' | 'ZMW' | 'ZWL';
    };
    query?: never;
    url: '/v3/connect/exchangeRate/{currencyCode}';
};

export type GetExchangeRateResponses = {
    /**
     * OK
     */
    200: MiscExchangeRateSchema;
};

export type GetExchangeRateResponse = GetExchangeRateResponses[keyof GetExchangeRateResponses];

export type GetDepositAddressData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/connect/wallet/address';
};

export type GetDepositAddressResponses = {
    /**
     * OK
     */
    200: WalletAddressSchema;
};

export type GetDepositAddressResponse = GetDepositAddressResponses[keyof GetDepositAddressResponses];

export type GetBalancesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/connect/wallet/balances';
};

export type GetBalancesResponses = {
    /**
     * OK
     */
    200: WalletBalancesSchema;
};

export type GetBalancesResponse = GetBalancesResponses[keyof GetBalancesResponses];

export type GetSpendableBalancesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v3/connect/wallet/spendableBalances';
};

export type GetSpendableBalancesResponses = {
    /**
     * OK
     */
    200: WalletSpendableBalancesSchema;
};

export type GetSpendableBalancesResponse = GetSpendableBalancesResponses[keyof GetSpendableBalancesResponses];

export type PayData = {
    body: {
        exchangeRateVersion?: string;
        instrumentCurrencyCode: 'MNEE' | 'BSV';
        denominationCurrencyCode?: 'AED' | 'AFN' | 'ALL' | 'AMD' | 'ANG' | 'AOA' | 'ARS' | 'AUD' | 'AWG' | 'AZN' | 'BAM' | 'BBD' | 'BDT' | 'BGN' | 'BHD' | 'BIF' | 'BMD' | 'BND' | 'BOB' | 'BRL' | 'BSD' | 'BTC' | 'BTN' | 'BWP' | 'BYN' | 'BYR' | 'BZD' | 'CAD' | 'CDF' | 'CHF' | 'CLF' | 'CLP' | 'CNY' | 'CNH' | 'COP' | 'CRC' | 'CUC' | 'CUP' | 'CVE' | 'CZK' | 'DJF' | 'DKK' | 'DOP' | 'DZD' | 'EGP' | 'ERN' | 'ETB' | 'EUR' | 'FJD' | 'FKP' | 'GBP' | 'GEL' | 'GGP' | 'GHS' | 'GIP' | 'GMD' | 'GNF' | 'GTQ' | 'GYD' | 'HKD' | 'HNL' | 'HRK' | 'HTG' | 'HUF' | 'IDR' | 'ILS' | 'IMP' | 'INR' | 'IQD' | 'IRR' | 'ISK' | 'JEP' | 'JMD' | 'JOD' | 'JPY' | 'KES' | 'KGS' | 'KHR' | 'KMF' | 'KPW' | 'KRW' | 'KWD' | 'KYD' | 'KZT' | 'LAK' | 'LBP' | 'LKR' | 'LRD' | 'LSL' | 'LTL' | 'LVL' | 'LYD' | 'MAD' | 'MDL' | 'MGA' | 'MKD' | 'MMK' | 'MNT' | 'MOP' | 'MRU' | 'MUR' | 'MVR' | 'MWK' | 'MXN' | 'MYR' | 'MZN' | 'NAD' | 'NGN' | 'NIO' | 'NOK' | 'NPR' | 'NZD' | 'OMR' | 'PAB' | 'PEN' | 'PGK' | 'PHP' | 'PKR' | 'PLN' | 'PYG' | 'QAR' | 'RON' | 'RSD' | 'RUB' | 'RWF' | 'SAR' | 'SBD' | 'SCR' | 'SDG' | 'SEK' | 'SGD' | 'SHP' | 'SLE' | 'SLL' | 'SOS' | 'SRD' | 'STD' | 'SVC' | 'SYP' | 'SZL' | 'THB' | 'TJS' | 'TMT' | 'TND' | 'TOP' | 'TRY' | 'TTD' | 'TWD' | 'TZS' | 'UAH' | 'UGX' | 'USD' | 'UYU' | 'UZS' | 'VES' | 'VND' | 'VUV' | 'WST' | 'XAF' | 'XAG' | 'XAU' | 'XCD' | 'XDR' | 'XOF' | 'XPF' | 'YER' | 'ZAR' | 'ZMK' | 'ZMW' | 'ZWL';
        note?: string;
        attachment?: {
            format: 'hex' | 'base64' | 'json' | 'hexArray';
            value?: {
                [key: string]: never;
            } | Array<string> | string;
        };
        receivers?: Array<{
            sendAmount: number;
            destination: string;
            tags?: Array<string>;
        }> | Array<{
            sendAmount: number;
            destination: string;
            tags?: Array<string>;
        }>;
    };
    path?: never;
    query?: never;
    url: '/v3/connect/wallet/pay';
};

export type PayResponses = {
    /**
     * OK
     */
    200: WalletTransactionRecordSchema;
};

export type PayResponse = PayResponses[keyof PayResponses];

export type GetPaymentDetailsData = {
    body?: never;
    path?: never;
    query: {
        transactionId: string;
    };
    url: '/v3/connect/wallet/payment';
};

export type GetPaymentDetailsResponses = {
    /**
     * OK
     */
    200: WalletTransactionRecordSchema;
};

export type GetPaymentDetailsResponse = GetPaymentDetailsResponses[keyof GetPaymentDetailsResponses];

export type ClientOptions = {
    baseUrl: 'https://cloud.handcash.io' | (string & {});
};