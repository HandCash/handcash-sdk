// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client/index.js';
import type { PostV1WaasAccountRequestEmailCodeData, PostV1WaasAccountRequestEmailCodeResponses, PostV1WaasAccountData, PostV1WaasAccountResponses, PostV1WaasAccountSelfCustodialData, PostV1WaasAccountSelfCustodialResponses, PostV1WaasAccountAccessKeyData, PostV1WaasAccountAccessKeyResponses, GetV1WaasAccountAliasAvailabilityByAliasData, GetV1WaasAccountAliasAvailabilityByAliasResponses, PostV1WaasWalletPayData, PostV1WaasWalletPayResponses, PostV1WaasWalletSelfCustodyPayTemplateData, PostV1WaasWalletSelfCustodyPayTemplateResponses, PostV1WaasWalletSelfCustodyPayBroadcastData, PostV1WaasWalletSelfCustodyPayBroadcastResponses, GetV1WaasWalletDepositInfoData, GetV1WaasWalletDepositInfoResponses, GetV1WaasWalletTransactionData, GetV1WaasWalletTransactionResponses, GetV1WaasWalletTransactionsData, GetV1WaasWalletTransactionsResponses, GetV1WaasWalletBalancesData, GetV1WaasWalletBalancesResponses, GetV1WaasWalletSelfCustodyDepositInfoData, GetV1WaasWalletSelfCustodyDepositInfoResponses, GetV1WaasWalletSelfCustodyTransactionData, GetV1WaasWalletSelfCustodyTransactionResponses, GetV1WaasWalletSelfCustodyTransactionsData, GetV1WaasWalletSelfCustodyTransactionsResponses, GetV1WaasWalletSelfCustodyBalancesData, GetV1WaasWalletSelfCustodyBalancesResponses, GetV1WaasExchangeRateByCurrencyCodeData, GetV1WaasExchangeRateByCurrencyCodeResponses, GetV1WaasItemOrdersByItemCreationOrderIdItemsData, GetV1WaasItemOrdersByItemCreationOrderIdItemsResponses, GetV1WaasItemOrdersByItemCreationOrderIdData, GetV1WaasItemOrdersByItemCreationOrderIdResponses, PostV1WaasItemOrdersIssueData, PostV1WaasItemOrdersIssueResponses, PostV1WaasItemOrdersBurnAndCreateData, PostV1WaasItemOrdersBurnAndCreateResponses, PostV1WaasItemsTransferData, PostV1WaasItemsTransferResponses, GetV1WaasItemsByOriginData, GetV1WaasItemsByOriginResponses, PostV1WaasItemsData, PostV1WaasItemsResponses, GetCurrentUserProfileData, GetCurrentUserProfileResponses, GetPublicUserProfilesData, GetPublicUserProfilesResponses, GetPermissionsData, GetPermissionsResponses, GetExchangeRateData, GetExchangeRateResponses, GetDepositAddressData, GetDepositAddressResponses, GetBalancesData, GetBalancesResponses, GetSpendableBalancesData, GetSpendableBalancesResponses, PayData, PayResponses, GetPaymentDetailsData, GetPaymentDetailsResponses } from './types.gen.js';
import { client as _heyApiClient } from './client.gen.js';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class WalletApi {
    /**
     * Request an email code for external account creation.
     */
    public static postV1WaasAccountRequestEmailCode<ThrowOnError extends boolean = false>(options: Options<PostV1WaasAccountRequestEmailCodeData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostV1WaasAccountRequestEmailCodeResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/account/requestEmailCode',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Create a new external wallet account.
     */
    public static postV1WaasAccount<ThrowOnError extends boolean = false>(options: Options<PostV1WaasAccountData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostV1WaasAccountResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/account',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Create a new self-custody wallet
     */
    public static postV1WaasAccountSelfCustodial<ThrowOnError extends boolean = false>(options: Options<PostV1WaasAccountSelfCustodialData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostV1WaasAccountSelfCustodialResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/account/selfCustodial',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Activate an access key for an existing Wallet-API account.
     */
    public static postV1WaasAccountAccessKey<ThrowOnError extends boolean = false>(options: Options<PostV1WaasAccountAccessKeyData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostV1WaasAccountAccessKeyResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/account/accessKey',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Check if an alias is available for external account creation.
     */
    public static getV1WaasAccountAliasAvailabilityByAlias<ThrowOnError extends boolean = false>(options: Options<GetV1WaasAccountAliasAvailabilityByAliasData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetV1WaasAccountAliasAvailabilityByAliasResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/account/aliasAvailability/{alias}',
            ...options
        });
    }
    
    /**
     * Perform a payment.
     */
    public static postV1WaasWalletPay<ThrowOnError extends boolean = false>(options: Options<PostV1WaasWalletPayData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostV1WaasWalletPayResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/wallet/pay',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Create a new transaction template that requires signing the inputs
     */
    public static postV1WaasWalletSelfCustodyPayTemplate<ThrowOnError extends boolean = false>(options: Options<PostV1WaasWalletSelfCustodyPayTemplateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostV1WaasWalletSelfCustodyPayTemplateResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/wallet/selfCustody/pay/template',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Broadcasts a signed transaction template
     */
    public static postV1WaasWalletSelfCustodyPayBroadcast<ThrowOnError extends boolean = false>(options: Options<PostV1WaasWalletSelfCustodyPayBroadcastData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostV1WaasWalletSelfCustodyPayBroadcastResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/wallet/selfCustody/pay/broadcast',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Retrieve deposit info for a Wallet-API account.
     */
    public static getV1WaasWalletDepositInfo<ThrowOnError extends boolean = false>(options?: Options<GetV1WaasWalletDepositInfoData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetV1WaasWalletDepositInfoResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/wallet/depositInfo',
            ...options
        });
    }
    
    /**
     * Retrieve details for a specific payment.
     */
    public static getV1WaasWalletTransaction<ThrowOnError extends boolean = false>(options: Options<GetV1WaasWalletTransactionData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetV1WaasWalletTransactionResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/wallet/transaction',
            ...options
        });
    }
    
    /**
     * Retrieve a paginated list of transactions.
     */
    public static getV1WaasWalletTransactions<ThrowOnError extends boolean = false>(options?: Options<GetV1WaasWalletTransactionsData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetV1WaasWalletTransactionsResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/wallet/transactions',
            ...options
        });
    }
    
    /**
     * Retrieve wallet balances.
     */
    public static getV1WaasWalletBalances<ThrowOnError extends boolean = false>(options?: Options<GetV1WaasWalletBalancesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetV1WaasWalletBalancesResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/wallet/balances',
            ...options
        });
    }
    
    /**
     * Retrieve deposit info for a self-custodial Wallet-API account.
     */
    public static getV1WaasWalletSelfCustodyDepositInfo<ThrowOnError extends boolean = false>(options?: Options<GetV1WaasWalletSelfCustodyDepositInfoData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetV1WaasWalletSelfCustodyDepositInfoResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/wallet/selfCustody/depositInfo',
            ...options
        });
    }
    
    /**
     * Retrieve details for a specific payment.
     */
    public static getV1WaasWalletSelfCustodyTransaction<ThrowOnError extends boolean = false>(options: Options<GetV1WaasWalletSelfCustodyTransactionData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetV1WaasWalletSelfCustodyTransactionResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/wallet/selfCustody/transaction',
            ...options
        });
    }
    
    /**
     * Retrieve a paginated list of transactions.
     */
    public static getV1WaasWalletSelfCustodyTransactions<ThrowOnError extends boolean = false>(options?: Options<GetV1WaasWalletSelfCustodyTransactionsData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetV1WaasWalletSelfCustodyTransactionsResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/wallet/selfCustody/transactions',
            ...options
        });
    }
    
    /**
     * Retrieve wallet balances.
     */
    public static getV1WaasWalletSelfCustodyBalances<ThrowOnError extends boolean = false>(options?: Options<GetV1WaasWalletSelfCustodyBalancesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetV1WaasWalletSelfCustodyBalancesResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/wallet/selfCustody/balances',
            ...options
        });
    }
    
    /**
     * Retrieve the BSV exchange rate in the specified currency.
     */
    public static getV1WaasExchangeRateByCurrencyCode<ThrowOnError extends boolean = false>(options: Options<GetV1WaasExchangeRateByCurrencyCodeData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetV1WaasExchangeRateByCurrencyCodeResponses, unknown, ThrowOnError>({
            url: '/v1/waas/exchangeRate/{currencyCode}',
            ...options
        });
    }
    
    /**
     * Retrieve items associated with a specific item creation order.
     */
    public static getV1WaasItemOrdersByItemCreationOrderIdItems<ThrowOnError extends boolean = false>(options: Options<GetV1WaasItemOrdersByItemCreationOrderIdItemsData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetV1WaasItemOrdersByItemCreationOrderIdItemsResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/item-orders/{itemCreationOrderId}/items',
            ...options
        });
    }
    
    /**
     * Retrieve details for a specific item creation order.
     */
    public static getV1WaasItemOrdersByItemCreationOrderId<ThrowOnError extends boolean = false>(options: Options<GetV1WaasItemOrdersByItemCreationOrderIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetV1WaasItemOrdersByItemCreationOrderIdResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/item-orders/{itemCreationOrderId}',
            ...options
        });
    }
    
    /**
     * Issue items for a creation order.
     */
    public static postV1WaasItemOrdersIssue<ThrowOnError extends boolean = false>(options: Options<PostV1WaasItemOrdersIssueData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostV1WaasItemOrdersIssueResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/item-orders/issue',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Burn and create new items in a single operation.
     */
    public static postV1WaasItemOrdersBurnAndCreate<ThrowOnError extends boolean = false>(options: Options<PostV1WaasItemOrdersBurnAndCreateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostV1WaasItemOrdersBurnAndCreateResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/item-orders/burn-and-create',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Transfer items to another user or address.
     */
    public static postV1WaasItemsTransfer<ThrowOnError extends boolean = false>(options: Options<PostV1WaasItemsTransferData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostV1WaasItemsTransferResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/items/transfer',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Retrieve item details by origin.
     */
    public static getV1WaasItemsByOrigin<ThrowOnError extends boolean = false>(options: Options<GetV1WaasItemsByOriginData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetV1WaasItemsByOriginResponses, unknown, ThrowOnError>({
            url: '/v1/waas/items/{origin}',
            ...options
        });
    }
    
    /**
     * Retrieve a list of items.
     */
    public static postV1WaasItems<ThrowOnError extends boolean = false>(options: Options<PostV1WaasItemsData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostV1WaasItemsResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v1/waas/items',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
}

export class Connect {
    /**
     * Get a current user profile
     */
    public static getCurrentUserProfile<ThrowOnError extends boolean = false>(options?: Options<GetCurrentUserProfileData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetCurrentUserProfileResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/profile/currentUserProfile',
            ...options
        });
    }
    
    /**
     * Get user profiles
     */
    public static getPublicUserProfiles<ThrowOnError extends boolean = false>(options: Options<GetPublicUserProfilesData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetPublicUserProfilesResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/profile/publicUserProfiles',
            ...options
        });
    }
    
    /**
     * Get users permissions
     */
    public static getPermissions<ThrowOnError extends boolean = false>(options?: Options<GetPermissionsData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetPermissionsResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/profile/permissions',
            ...options
        });
    }
    
    /**
     * Retrieve the BSV exchange rate in the specified currency.
     */
    public static getExchangeRate<ThrowOnError extends boolean = false>(options: Options<GetExchangeRateData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetExchangeRateResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/exchangeRate/{currencyCode}',
            ...options
        });
    }
    
    /**
     * Get a legacy deposit address
     */
    public static getDepositAddress<ThrowOnError extends boolean = false>(options?: Options<GetDepositAddressData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetDepositAddressResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/wallet/address',
            ...options
        });
    }
    
    /**
     * Retrieve wallet balances.
     */
    public static getBalances<ThrowOnError extends boolean = false>(options?: Options<GetBalancesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetBalancesResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/wallet/balances',
            ...options
        });
    }
    
    /**
     * Retrieve wallets spendable balances.
     */
    public static getSpendableBalances<ThrowOnError extends boolean = false>(options?: Options<GetSpendableBalancesData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetSpendableBalancesResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/wallet/spendableBalances',
            ...options
        });
    }
    
    /**
     * Make a payment
     */
    public static pay<ThrowOnError extends boolean = false>(options: Options<PayData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PayResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/wallet/pay',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    /**
     * Retrieve details for a specific payment.
     */
    public static getPaymentDetails<ThrowOnError extends boolean = false>(options: Options<GetPaymentDetailsData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetPaymentDetailsResponses, unknown, ThrowOnError>({
            security: [
                {
                    name: 'oauth-publickey',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-signature',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-nonce',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-timestamp',
                    type: 'apiKey'
                },
                {
                    name: 'oauth-privatekey',
                    type: 'apiKey'
                },
                {
                    name: 'app-id',
                    type: 'apiKey'
                },
                {
                    name: 'app-secret',
                    type: 'apiKey'
                }
            ],
            url: '/v3/connect/wallet/payment',
            ...options
        });
    }
}